// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sourcing_server.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 溯源请求
type SourcingRequest struct {
	AggId                string   `protobuf:"bytes,1,opt,name=aggId,proto3" json:"aggId,omitempty"`
	AggType              string   `protobuf:"bytes,2,opt,name=aggType,proto3" json:"aggType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourcingRequest) Reset()         { *m = SourcingRequest{} }
func (m *SourcingRequest) String() string { return proto.CompactTextString(m) }
func (*SourcingRequest) ProtoMessage()    {}
func (*SourcingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_sourcing_server_fa71ab115075c087, []int{0}
}
func (m *SourcingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourcingRequest.Unmarshal(m, b)
}
func (m *SourcingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourcingRequest.Marshal(b, m, deterministic)
}
func (dst *SourcingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourcingRequest.Merge(dst, src)
}
func (m *SourcingRequest) XXX_Size() int {
	return xxx_messageInfo_SourcingRequest.Size(m)
}
func (m *SourcingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SourcingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SourcingRequest proto.InternalMessageInfo

func (m *SourcingRequest) GetAggId() string {
	if m != nil {
		return m.AggId
	}
	return ""
}

func (m *SourcingRequest) GetAggType() string {
	if m != nil {
		return m.AggType
	}
	return ""
}

// /溯源返回
type SourcingResponse struct {
	AggId                string   `protobuf:"bytes,1,opt,name=aggId,proto3" json:"aggId,omitempty"`
	AggType              string   `protobuf:"bytes,2,opt,name=aggType,proto3" json:"aggType,omitempty"`
	Version              int32    `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Data                 string   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourcingResponse) Reset()         { *m = SourcingResponse{} }
func (m *SourcingResponse) String() string { return proto.CompactTextString(m) }
func (*SourcingResponse) ProtoMessage()    {}
func (*SourcingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_sourcing_server_fa71ab115075c087, []int{1}
}
func (m *SourcingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourcingResponse.Unmarshal(m, b)
}
func (m *SourcingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourcingResponse.Marshal(b, m, deterministic)
}
func (dst *SourcingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourcingResponse.Merge(dst, src)
}
func (m *SourcingResponse) XXX_Size() int {
	return xxx_messageInfo_SourcingResponse.Size(m)
}
func (m *SourcingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SourcingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SourcingResponse proto.InternalMessageInfo

func (m *SourcingResponse) GetAggId() string {
	if m != nil {
		return m.AggId
	}
	return ""
}

func (m *SourcingResponse) GetAggType() string {
	if m != nil {
		return m.AggType
	}
	return ""
}

func (m *SourcingResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SourcingResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*SourcingRequest)(nil), "rpc.SourcingRequest")
	proto.RegisterType((*SourcingResponse)(nil), "rpc.SourcingResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SourcingClient is the client API for Sourcing service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SourcingClient interface {
	// 发起事件溯源,得到聚合对象,用来作为 命令处理的聚合
	Sourcing(ctx context.Context, in *SourcingRequest, opts ...grpc.CallOption) (*SourcingResponse, error)
}

type sourcingClient struct {
	cc *grpc.ClientConn
}

func NewSourcingClient(cc *grpc.ClientConn) SourcingClient {
	return &sourcingClient{cc}
}

func (c *sourcingClient) Sourcing(ctx context.Context, in *SourcingRequest, opts ...grpc.CallOption) (*SourcingResponse, error) {
	out := new(SourcingResponse)
	err := c.cc.Invoke(ctx, "/rpc.Sourcing/Sourcing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SourcingServer is the server API for Sourcing service.
type SourcingServer interface {
	// 发起事件溯源,得到聚合对象,用来作为 命令处理的聚合
	Sourcing(context.Context, *SourcingRequest) (*SourcingResponse, error)
}

func RegisterSourcingServer(s *grpc.Server, srv SourcingServer) {
	s.RegisterService(&_Sourcing_serviceDesc, srv)
}

func _Sourcing_Sourcing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SourcingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SourcingServer).Sourcing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Sourcing/Sourcing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SourcingServer).Sourcing(ctx, req.(*SourcingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sourcing_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Sourcing",
	HandlerType: (*SourcingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sourcing",
			Handler:    _Sourcing_Sourcing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sourcing_server.proto",
}

func init() {
	proto.RegisterFile("sourcing_server.proto", fileDescriptor_sourcing_server_fa71ab115075c087)
}

var fileDescriptor_sourcing_server_fa71ab115075c087 = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0xce, 0x2f, 0x2d,
	0x4a, 0xce, 0xcc, 0x4b, 0x8f, 0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x62, 0x2e, 0x2a, 0x48, 0x96, 0x92, 0x4c, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07,
	0x0b, 0x25, 0x95, 0xa6, 0xe9, 0x27, 0xe6, 0x55, 0x42, 0xe4, 0x95, 0x1c, 0xb9, 0xf8, 0x83, 0xa1,
	0x1a, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x58, 0x13, 0xd3, 0xd3, 0x3d,
	0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x21, 0x09, 0x2e, 0xf6, 0xc4, 0xf4,
	0xf4, 0x90, 0xca, 0x82, 0x54, 0x09, 0x26, 0xb0, 0x38, 0x8c, 0xab, 0x54, 0xc0, 0x25, 0x80, 0x30,
	0xa2, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x95, 0x54, 0x33, 0x40, 0x32, 0x65, 0xa9, 0x45, 0xc5, 0x99,
	0xf9, 0x79, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x30, 0xae, 0x90, 0x10, 0x17, 0x4b, 0x4a,
	0x62, 0x49, 0xa2, 0x04, 0x0b, 0x58, 0x03, 0x98, 0x6d, 0xe4, 0xca, 0xc5, 0x01, 0xb3, 0x51, 0xc8,
	0x12, 0x89, 0x2d, 0xa2, 0x57, 0x54, 0x90, 0xac, 0x87, 0xe6, 0x1f, 0x29, 0x51, 0x34, 0x51, 0x88,
	0x13, 0x95, 0x18, 0x92, 0xd8, 0xc0, 0x41, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xfc,
	0xa8, 0xc0, 0x3b, 0x01, 0x00, 0x00,
}
