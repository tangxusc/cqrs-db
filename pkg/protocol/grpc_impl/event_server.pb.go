// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event_server.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 请求
type PublishRequest struct {
	AggId                string   `protobuf:"bytes,1,opt,name=aggId,proto3" json:"aggId,omitempty"`
	AggType              string   `protobuf:"bytes,2,opt,name=aggType,proto3" json:"aggType,omitempty"`
	Version              int32    `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	EventType            string   `protobuf:"bytes,4,opt,name=eventType,proto3" json:"eventType,omitempty"`
	Data                 string   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishRequest) Reset()         { *m = PublishRequest{} }
func (m *PublishRequest) String() string { return proto.CompactTextString(m) }
func (*PublishRequest) ProtoMessage()    {}
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_server_c1466447558dbda8, []int{0}
}
func (m *PublishRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishRequest.Unmarshal(m, b)
}
func (m *PublishRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishRequest.Marshal(b, m, deterministic)
}
func (dst *PublishRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishRequest.Merge(dst, src)
}
func (m *PublishRequest) XXX_Size() int {
	return xxx_messageInfo_PublishRequest.Size(m)
}
func (m *PublishRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishRequest proto.InternalMessageInfo

func (m *PublishRequest) GetAggId() string {
	if m != nil {
		return m.AggId
	}
	return ""
}

func (m *PublishRequest) GetAggType() string {
	if m != nil {
		return m.AggType
	}
	return ""
}

func (m *PublishRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *PublishRequest) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *PublishRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// /返回
type PublishResponse struct {
	Version              int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublishResponse) Reset()         { *m = PublishResponse{} }
func (m *PublishResponse) String() string { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()    {}
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_server_c1466447558dbda8, []int{1}
}
func (m *PublishResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishResponse.Unmarshal(m, b)
}
func (m *PublishResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishResponse.Marshal(b, m, deterministic)
}
func (dst *PublishResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResponse.Merge(dst, src)
}
func (m *PublishResponse) XXX_Size() int {
	return xxx_messageInfo_PublishResponse.Size(m)
}
func (m *PublishResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResponse proto.InternalMessageInfo

func (m *PublishResponse) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func init() {
	proto.RegisterType((*PublishRequest)(nil), "rpc.PublishRequest")
	proto.RegisterType((*PublishResponse)(nil), "rpc.PublishResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventsClient is the client API for Events service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventsClient interface {
	// 发起事件溯源,得到聚合对象,用来作为 命令处理的聚合
	Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error)
}

type eventsClient struct {
	cc *grpc.ClientConn
}

func NewEventsClient(cc *grpc.ClientConn) EventsClient {
	return &eventsClient{cc}
}

func (c *eventsClient) Publish(ctx context.Context, in *PublishRequest, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/rpc.Events/Publish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventsServer is the server API for Events service.
type EventsServer interface {
	// 发起事件溯源,得到聚合对象,用来作为 命令处理的聚合
	Publish(context.Context, *PublishRequest) (*PublishResponse, error)
}

func RegisterEventsServer(s *grpc.Server, srv EventsServer) {
	s.RegisterService(&_Events_serviceDesc, srv)
}

func _Events_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventsServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Events/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventsServer).Publish(ctx, req.(*PublishRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Events_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Events",
	HandlerType: (*EventsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Publish",
			Handler:    _Events_Publish_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "event_server.proto",
}

func init() { proto.RegisterFile("event_server.proto", fileDescriptor_event_server_c1466447558dbda8) }

var fileDescriptor_event_server_c1466447558dbda8 = []byte{
	// 220 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0x2d, 0x4b, 0xcd,
	0x2b, 0x89, 0x2f, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62,
	0x2e, 0x2a, 0x48, 0x96, 0x92, 0x4c, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x0b, 0x25, 0x95,
	0xa6, 0xe9, 0x27, 0xe6, 0x55, 0x42, 0xe4, 0x95, 0x7a, 0x18, 0xb9, 0xf8, 0x02, 0x4a, 0x93, 0x72,
	0x32, 0x8b, 0x33, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x58, 0x13, 0xd3,
	0xd3, 0x3d, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x21, 0x09, 0x2e, 0xf6,
	0xc4, 0xf4, 0xf4, 0x90, 0xca, 0x82, 0x54, 0x09, 0x26, 0xb0, 0x38, 0x8c, 0x0b, 0x92, 0x29, 0x4b,
	0x2d, 0x2a, 0xce, 0xcc, 0xcf, 0x93, 0x60, 0x56, 0x60, 0xd4, 0x60, 0x0d, 0x82, 0x71, 0x85, 0x64,
	0xb8, 0x38, 0xc1, 0x4e, 0x02, 0xeb, 0x62, 0x01, 0xeb, 0x42, 0x08, 0x08, 0x09, 0x71, 0xb1, 0xa4,
	0x24, 0x96, 0x24, 0x4a, 0xb0, 0x82, 0x25, 0xc0, 0x6c, 0x25, 0x6d, 0x2e, 0x7e, 0xb8, 0x6b, 0x8a,
	0x0b, 0xf2, 0xf3, 0x8a, 0x51, 0x8c, 0x67, 0x42, 0x31, 0xde, 0xc8, 0x81, 0x8b, 0xcd, 0x15, 0x64,
	0x5a, 0xb1, 0x90, 0x19, 0x17, 0x3b, 0x54, 0x9b, 0x90, 0xb0, 0x5e, 0x51, 0x41, 0xb2, 0x1e, 0xaa,
	0x97, 0xa4, 0x44, 0x50, 0x05, 0x21, 0x26, 0x2b, 0x31, 0x24, 0xb1, 0x81, 0x03, 0xc1, 0x18, 0x10,
	0x00, 0x00, 0xff, 0xff, 0xae, 0x65, 0x73, 0xba, 0x3a, 0x01, 0x00, 0x00,
}
